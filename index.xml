<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chris Tomy</title><link>https://cyberchris.xyz/</link><description>Recent content on Chris Tomy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright><lastBuildDate>Wed, 18 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cyberchris.xyz/index.xml" rel="self" type="application/rss+xml"/><item><title>Dead Man's Switch: Combining SAE Features and Refusal Intervention in LLMs</title><link>https://cyberchris.xyz/posts/dead-mans-switch/</link><pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/posts/dead-mans-switch/</guid><description>An AI alignment project completed at the end of the AISF course. Public demo in a HuggingFace space still pending a community grant.
In cases where we don&amp;rsquo;t want to risk relying on RLHF to teach the model to refuse, we could leverage the model&amp;rsquo;s own understanding of risky behaviours (through SAE extracted features) and selectively steer the model towards refusal (by injecting activation vectors) under certain circumstances.
Motivation RLHF&amp;rsquo;d models can be &amp;ldquo;coerced&amp;rdquo; through prompting to generate risky outputs.</description></item><item><title>Fixing ASIX USB Ethernet on Linux</title><link>https://cyberchris.xyz/posts/ethernet-fix/</link><pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/posts/ethernet-fix/</guid><description>This is less of a blog post and more of a note on how I fixed my Anker 7 in 1 (with Ethernet) USB adapter, as the drivers don&amp;rsquo;t work by default on Linux.
First, troubleshooting step is lsusb, it should show you the ASIX Ethernet device after plugging it in:
❯ lsusb Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.</description></item><item><title>Paper on Modus Accepted in ESEC/FSE 2022</title><link>https://cyberchris.xyz/posts/modus/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/posts/modus/</guid><description>Edit: our paper is now published here. I&amp;rsquo;ve added the abstract below.
ESEC/FSE 2022 accepted a paper I co-authored during my final year at university. Here is the preprint.
Abstract Containers help share and deploy software by packaging it with all its dependencies. Tools, like Docker or Kubernetes, spawn containers from images as specified by a build system’s language, such as Dockerfile. A build system takes many parameters to build an image, including OS and application versions.</description></item><item><title>Paper on Modus Accepted in ESEC/FSE 2022</title><link>https://cyberchris.xyz/showcase/modus/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/showcase/modus/</guid><description>ESEC/FSE 2022 accepted a paper I co-authored during my final year at university. Here is the preprint.</description></item><item><title>Fixing Python Import Resolution in Nix with Direnv</title><link>https://cyberchris.xyz/posts/nix-python-pyright/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/posts/nix-python-pyright/</guid><description>Introduction I&amp;#39;ve started using development environments with nix-shell for my personal projects. I greatly prefer the consistency of dropping into a nix-shell, over reading Python&amp;#39;s venv manual for the umpteenth time, then yak-shaving into whether I should be using pyenv-virtualenv instead.
Here&amp;#39;s a typical shell.nix file for Python 3.10 and some common packages like numpy.
{ pkgs ? import &amp;lt;nixpkgs&amp;gt; { } }: let my-python = pkgs.python310; python-with-my-packages = my-python.</description></item><item><title>Experiment with Boids with Blazor</title><link>https://cyberchris.xyz/showcase/blazor-boids/</link><pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/showcase/blazor-boids/</guid><description>I built a boid simulation with Blazor that allows you to toggle the three rules, as well some other options. Check it out here.
Notably, you can switch between rendering in JS, or through Blazor&amp;rsquo;s API, with significant performance effects. (Spoilers: JS is way faster.)</description></item><item><title>NudgeMe: Cross-Platform Mobile Wellbeing Tracker</title><link>https://cyberchris.xyz/showcase/nudgeme/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/showcase/nudgeme/</guid><description>This was a fairly extensive project undertaken as part of one of my modules, and although I don&amp;rsquo;t usually mention university work in Showcase, this is an exception since everything we did was self-learned.
I was team leader for a team of two (including me), and we built a full-stack cross-platform mobile application designed to help the UK population track and share their wellbeing &amp;amp; steps. The mobile client was built with Flutter and the back-end in Go.</description></item><item><title>Basic Scripting With Awk And Gnuplot</title><link>https://cyberchris.xyz/posts/awk-and-gnuplot/</link><pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/posts/awk-and-gnuplot/</guid><description>Posted to HN. Comments and discussion highly encouraged.
Introduction This will be a short example-based guide to (a) awk (b) gnuplot and (c) using them in a script.
I needed to graph some data based on the output of a command run a couple times. So what better way to solve that five minute task than to spend an hour learning awk &amp;amp; gnuplot to automate it?</description></item><item><title>Adding an iCalendar source to Calfw (feat. Doom Emacs)</title><link>https://cyberchris.xyz/posts/ical-doom-emacs/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/posts/ical-doom-emacs/</guid><description>Here&amp;#39;s my calendar in Emacs. I use both an org-agenda and an iCalendar source. Introduction This will be a short post on how I use custom sources for the Doom Emacs calendar module; in particular, a iCalendar/ics source.
Whenever I mention &amp;#39;Doom&amp;#39;, I&amp;#39;m referring to Doom Emacs.
Prerequisites A basic understanding of how to use Doom Emacs, and some familiarity with Lisp-like languages.</description></item><item><title>GSA Ultra Hackathon</title><link>https://cyberchris.xyz/showcase/gsa-ultra/</link><pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate><guid>https://cyberchris.xyz/showcase/gsa-ultra/</guid><description>Thanks to GSA Capital for sending me these cool t-shirts for my standing in their recent hackathon. I placed 109 out of over 900 undergrads/postgrads worldwide. Congrats to the winners!</description></item></channel></rss>